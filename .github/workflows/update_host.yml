# This is a basic workflow to help you get started with Actions

name: cfhost Workflow

# Controls when the workflow will run
on:
  schedule:
    # every 2 hour, get kv `cfhost`, test`
    - cron: "0 */2 * * *"
    # every sunday morning, test domain in cfhostpat.json
    # - cron: "0 22 * * 0"
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
    paths-ignore:
      - ".gitignore"
      - ".github/workflows/test.yml"
  #  - 'dist/**'
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      CF_WORKER_NAME:
        description: "worker script name for deployment (default take repo variable 'CF_WORKER_NAME')"
        required: false
        default: ""
        type: "string"
      CF_PAGE_NAME:
        description: "page project name for deployment (default take repo variable 'CF_PAGE_NAME')"
        required: false
        default: ""
        type: "string"
      CF_PAGE_BRANCH:
        description: "page branch for deployment environment, empty or 'main' for production env, otherwise for preview (default take repo variable 'CF_PAGE_BRANCH')"
        required: false
        default: ""
        type: "string"
      proxys:
        description: "proxys json data"
        required: false
        type: "string"

  workflow_call:
    inputs:
      shouldDeploy:
        description: "if it is needed to deploy"
        required: false
        default: "false"
        type: "string"
    # secrets:

env:
  workerName: ${{inputs.CF_WORKER_NAME || vars.CF_WORKER_NAME}}
  pageName: ${{inputs.CF_PAGE_NAME || vars.CF_PAGE_NAME}}
  pageBranch: ${{inputs.CF_PAGE_BRANCH || vars.CF_PAGE_BRANCH || 'main'}}
  proxys: ${{ inputs.proxys }}
  shouldDeploy: ${{ inputs.shouldDeploy }}
  EVENT_NAME: ${{github.event_name}}
  SCHEDULE: ${{github.event.schedule}}
  OWNER: ${{github.repository_owner}}

  CF_ACCOUNT_ID: ${{secrets.CF_ACCOUNT_ID}}
  CF_SCRIPT_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/workers/scripts
  CF_SERVICE_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/workers/services
  CF_PROJECT_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/pages/projects
  CF_KV_API: https://api.cloudflare.com/client/v4/accounts/${{secrets.CF_ACCOUNT_ID}}/storage/kv/namespaces/${{secrets.CF_NAMESPACE_ID || vars.CF_NAMESPACE_ID}}/values
  CF_API_TOKEN: ${{secrets.CF_API_TOKEN}}
  CF_NAMESPACE_ID: ${{secrets.CF_NAMESPACE_ID || vars.CF_NAMESPACE_ID}}
  CF_WORKER_UUID: ${{secrets.CF_WORKER_UUID}}
  CF_PAGE_UUID: ${{secrets.CF_PAGE_UUID}}
  AUTH: "Authorization:Bearer ${{secrets.CF_API_TOKEN}}"

  CFHOST: cfhost
  CFHOST_BAK: cfhost_bak
  CFHOST_JSON: src/cfhost.json
  CFHOSTPAT_JS: src/cfhostpat.js
  CFHOSTPAT_JSON: src/cfhostpat.json
  PROXYS_UPDATED: proxys_updated
  PROXYS_JSON: src/proxys.json
  SENSITIVE_TXT: sensitive.txt

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          # https://github.com/orgs/community/discussions/25797#discussioncomment-3249294
          fetch-depth: 0

      - id: check-cfhost
        name: check cfhost, filter, backup
        run: . .github/common.sh && check_cfhost

      - id: check-change
        name: check change of cfhost*.json, inputs.proxys
        env:
          GH_TOKEN: ${{ github.token }}
          RUN_ID: ${{ github.run_id }}
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.event.after }}
        run: . .github/common.sh && check_change

      - id: prepare-data
        name: prepare cfhost.json proxys.json
        run: . .github/common.sh && prepare_data

      - name: setup node
        if: steps.prepare-data.conclusion == 'success'
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - id: build
        name: build worker
        run: |
          npm i
          npm run esbuild

      - id: deploy
        name: deploy worker, page
        if: steps.build.conclusion == 'success'
        env:
          CF_PAGE_ENV: ${{env.pageBranch == 'main' && 'production' || 'preview'}}
        run: bash ./deploy.sh

      - name: check status
        if: steps.deploy.conclusion == 'success'
        run: . .github/common.sh && check_status

  workflow-keepalive:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
