const cfcidr = [{"1":[[0,-1],[257,-1]],"8":[[1680,-2],[1682,-1],[2535,-1],[2708,-1],[3783,-1],[3785,-1],[3786,-2],[3788,-1],[4557,-1],[4558,-1],[4658,-1],[4721,-1],[4802,-2],[4804,-1],[4872,-1],[5220,-2],[5223,-1],[5242,-2],[5244,-2],[5246,-1],[5373,-1],[5384,-2],[5386,-1],[5389,-1],[5486,-2],[5615,-1],[6027,-1],[6128,-1],[6231,-1],[6386,-2],[6388,-1],[6496,-2],[6649,-1],[6836,-1],[6838,-1],[6976,-1],[6978,-2],[6980,-2],[6991,-1],[7188,-1],[7250,-1],[7294,-1],[7381,-1],[7529,-1],[7654,-2],[7914,-1],[7938,-1],[8096,-2],[8773,-1],[8774,-2],[8904,-2],[8906,-1],[9017,-1],[9018,-2],[9109,-1],[9171,-1],[9432,-4],[9436,-1],[9513,-1],[9515,-1],[9875,-1],[9876,-2],[9900,-1],[9990,-1],[10002,-1],[10109,-1],[10110,-1],[10185,-1],[10186,-2],[10188,-4],[10196,-4],[10266,-2],[10268,-4],[10347,-1],[10351,-1],[10380,-1],[10501,-1],[10502,-2],[10532,-2],[10803,-1],[10804,-1],[10806,-2],[10913,-1],[10916,-1],[10924,-1],[10997,-1],[11129,-1],[11130,-2],[11232,-2],[11234,-1],[11264,-4],[11270,-1],[11322,-1],[11324,-4],[11561,-1],[11563,-1],[11564,-4],[11617,-1],[11621,-1],[11622,-1],[11628,-1],[11631,-1],[11664,-4],[11889,-1],[11890,-2],[11893,-1],[11894,-2],[12041,-1],[12044,-4],[12101,-1],[12103,-1],[12418,-1],[12420,-2],[12422,-1]],"23":[[58149,-1],[58150,-2],[58172,-1]],"64":[[17600,-1]],"65":[[28223,-1]],"66":[[60360,-1]],"68":[[17217,-1]],"91":[[60118,-1]],"103":[[5620,-1],[5832,-4],[20964,-1]],"104":[[4096,-4096]],"108":[[41664,-16],[41682,-2],[41684,-2],[41688,-2],[41690,-1],[41698,-2],[41707,-1],[41708,-4],[41712,-8],[41720,-2],[41722,-1],[41724,-2]],"141":[[25921,-1],[25922,-2],[25924,-4],[25928,-4],[25932,-2],[25938,-2],[25940,-4],[25946,-1],[25948,-4],[25952,-4],[25956,-1],[25964,-2],[25966,-1],[25968,-16]],"162":[[40448,-4],[40452,-2],[40456,-8],[40464,-16],[40480,-16],[40496,-1],[40499,-1],[40500,-4],[40504,-8],[40520,-8],[40528,-2],[40530,-1],[40532,-4],[40536,-8],[40544,-16],[40560,-2],[40562,-1],[40564,-4],[40572,-4],[40576,-32],[40608,-16],[40624,-1],[40626,-2],[40628,-4],[40632,-8],[40640,-4],[40644,-1],[40646,-2],[40648,-8],[40656,-4],[40660,-1],[40662,-2],[40664,-8],[40672,-4],[40676,-1],[40680,-8],[40688,-4],[40692,-2],[40696,-4],[40701,-1],[40702,-2],[40704,-64],[40768,-16],[40832,-128],[64338,-1]],"172":[[16384,-512],[16896,-4],[16936,-8],[17152,-256],[17408,-32],[17440,-8],[17448,-4],[17453,-1],[17454,-2],[17456,-16],[17472,-16],[17488,-2],[17491,-1],[17492,-4],[17496,-8],[17504,-16],[17520,-8],[17528,-2],[17531,-1],[17532,-4],[17536,-16],[17552,-8],[17560,-4],[17569,-1],[17570,-2],[17572,-4],[17576,-8],[17584,-2],[17587,-1],[17588,-4],[17592,-8],[17604,-4],[17608,-8],[17616,-8],[17625,-1],[17626,-2],[17628,-4],[17632,-16],[17648,-8],[17656,-4],[17660,-2],[17663,-1],[17664,-16],[17680,-1],[17682,-2],[17684,-4],[17696,-16],[17712,-1],[17716,-4],[17724,-4],[17728,-32],[17760,-2],[17764,-4],[17769,-1],[17770,-2],[17772,-4],[17776,-8],[17788,-4],[17792,-16],[17808,-8],[17820,-4],[17824,-16],[17844,-4],[17848,-8],[17856,-16],[17872,-1],[17874,-2],[17876,-1],[17880,-4],[17884,-2],[17888,-16],[17905,-1],[17906,-1],[17908,-4],[17912,-1],[17914,-2],[17916,-4],[17952,-16],[17968,-2],[17971,-1],[17972,-4],[17976,-8],[18000,-16],[18016,-16],[18032,-4],[18036,-2],[18040,-8],[18048,-8],[18056,-1],[18058,-2],[18060,-4],[18064,-4],[18068,-2],[18070,-1],[18072,-4],[18076,-2],[18078,-1],[18080,-4],[18092,-4],[18096,-8],[18106,-2],[18108,-4],[18112,-8],[18120,-1],[18122,-2],[18124,-4],[18128,-16],[18144,-32],[18176,-1],[18178,-2],[18180,-4],[18184,-8],[18192,-2],[18196,-4],[18200,-8],[18256,-8],[18264,-2],[18266,-1],[18268,-4],[18272,-8],[18284,-4],[18288,-16],[18304,-8],[18313,-1],[18314,-2],[18316,-4],[18320,-16],[18336,-32],[18368,-64]],"173":[[62769,-1],[62774,-1],[62778,-2],[62783,-1]],"185":[[37548,-2]],"188":[[29280,-4],[29284,-1],[29286,-2],[29290,-2],[29292,-1],[29295,-1]],"190":[[24048,-16]],"195":[[62074,-2]],"197":[[60144,-4]],"198":[[10625,-1],[10688,-16],[10704,-2],[10707,-1],[10708,-1],[10710,-2],[10712,-8],[10720,-8],[10728,-2],[10732,-4],[10736,-2],[10738,-1],[55803,-1]],"199":[[7040,-4],[7044,-1],[7046,-2]],"maxGroupingPrefixLen":8,"maxPrefixLen":24}, 
{"604031744":[[1093,-1],[1175,-1],[1560,-1],[8264,-2],[48080,-16],[61454,-1]],"637945600":[[0,-32],[32,-16],[80,-8],[88,-4],[92,-2],[97,-1],[98,-2],[100,-4],[106,-2],[108,-4],[160,-2],[169,-1],[192,-16],[208,-2],[224,-8],[240,-2],[243,-1],[244,-1],[256,-2],[271,-1],[304,-16],[12288,-64],[12373,-1],[12374,-1],[12552,-1],[12556,-1],[12560,-16],[17408,-16],[18176,-1],[33680,-16],[33712,-16],[34240,-32],[36000,-16],[36208,-16],[36240,-16],[36304,-16],[36320,-16],[37056,-32],[37296,-16],[38464,-16],[38752,-16],[39392,-16],[39520,-16],[39568,-16],[39632,-16],[39648,-16],[39680,-16],[40016,-16],[40032,-16]],"671348736":[[80,-4],[84,-1]],"705075393":[[80,-4],[86,-1],[88,-1],[12544,-16],[12576,-4]],"maxGroupingPrefixLen":32,"maxPrefixLen":48}];

// https://stackoverflow.com/questions/503052/how-to-check-if-ip-is-in-one-of-these-subnets
// https://stackoverflow.com/questions/10306690/what-is-a-regular-expression-which-will-match-a-valid-domain-name-without-a-subd

const ver = { 4: { partLen: 8, partShift: 256 }, 6: { partLen: 16, partShift: 65536 } };
const domainPat = /^((?!-))(xn--)?[a-z0-9][a-z0-9-_]{0,61}[a-z0-9]{0,1}\.(xn--)?([a-z0-9\-]{1,61}|[a-z0-9-]{1,30}\.[a-z]{2,})$/i
// return: invalid host -> undefined, 
//         domain notin -> false, 
//         ip notin -> 0, 
//         ip in -> ip version
export default function inCfcidr(host, list = cfcidr) {
	let ip, ipLeft = 0, ipMid = 0, r=0;
	const c = (o) => {
		let i = 0;
		for (; i<list['maxGroupingPrefixLen']/o['partLen']; i++)
			ipLeft = ipLeft * o['partShift'] + ip[i];
		if (! list[ipLeft])
			return false;
		list = list[ipLeft];
		for (; i<ip.length; i++) 
			ipMid = ipMid * o['partShift'] + ip[i];
		return true;
	}
	if (host.includes(':')) {
		list = list[1]
		ip = host.split(':').map(p=>p==''?0:Number('0x'+p)).slice(0, list['maxPrefixLen']/16);
		if(! c(ver[6])) return r;
		r = 6;
	} else if (ip = host.match(/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/)) {
		//let ip = host.split(".").map(Number);
		list = list[0]
		ip = ip.slice(1, 1+list['maxPrefixLen']/8).map(Number)
		if(! c(ver[4])) return r;
		r = 4;
	} else return domainPat.test(host) ? false : undefined;
  
	if (ipMid < list[0][0])
		return false; //
	// Binary search
	let x = 0, y = list.length-1, mid;
	while (x <= y) {
		mid = Math.floor((x + y) / 2);
		if (ipMid == list[mid][0])
			return r;
		else if (ipMid < list[mid][0])
			y = mid-1;
		else
			x = mid+1;
	}
	// Match
	let masked = ipMid & list[y][1];
	return (masked ^ list[y][0]) ? 0 : r;
}

/* console.time();
console.log(inCfSubNet('199.27.129.23'), true)
console.log(inCfSubNet('199.27.133.23'), false)
console.log(inCfSubNet('2400:cb00:618::'), true)
console.log(inCfSubNet('2400:cb00:2049::'), true)
console.log(inCfSubNet('2606:4700:0019::'), true)
console.log(inCfSubNet('2606:4700:0039::'), false)
console.log(inCfSubNet('2606:4700:0049::'), false)
console.log(inCfSubNet('206.47.44.com'), false)
console.log(inCfSubNet('104.18.10.143'), true)
console.log(inCfSubNet('13.248.169.48'), false)
console.log(inCfSubNet('2606:4700:0:0:0:0:6810:8fed'), true)
console.log(inCfSubNet('2606:4700:0:0:0:0:6810:1576'), true)
console.log(inCfSubNet('2606:4700:20:0:0:0:681a:59d'), true)
console.log(inCfSubNet('2606:4700:20:0:0:0:681a:ade'), true)
console.timeEnd(); */

/* const cfcidrIPv4 = [
  "1.0.0.0/24",
  "1.1.1.0/24",
  "8.6.144.0/23",
  "8.6.146.0/24",
  "8.9.231.0/24",
  "8.10.148.0/24",
  "8.14.199.0/24",
  "8.14.201.0/24",
  "8.14.202.0/23",
  "8.14.204.0/24",
  "8.17.205.0/24",
  "8.17.206.0/24",
  "8.18.50.0/24",
  "8.18.113.0/24",
  "8.18.194.0/23",
  "8.18.196.0/24",
  "8.19.8.0/24",
  "8.20.100.0/23",
  "8.20.103.0/24",
  "8.20.122.0/23",
  "8.20.124.0/23",
  "8.20.126.0/24",
  "8.20.253.0/24",
  "8.21.8.0/23",
  "8.21.10.0/24",
  "8.21.13.0/24",
  "8.21.110.0/23",
  "8.21.239.0/24",
  "8.23.139.0/24",
  "8.23.240.0/24",
  "8.24.87.0/24",
  "8.24.242.0/23",
  "8.24.244.0/24",
  "8.25.96.0/23",
  "8.25.249.0/24",
  "8.26.180.0/24",
  "8.26.182.0/24",
  "8.27.64.0/24",
  "8.27.66.0/23",
  "8.27.68.0/23",
  "8.27.79.0/24",
  "8.28.20.0/24",
  "8.28.82.0/24",
  "8.28.126.0/24",
  "8.28.213.0/24",
  "8.29.105.0/24",
  "8.29.230.0/23",
  "8.30.234.0/24",
  "8.31.2.0/24",
  "8.31.160.0/23",
  "8.34.69.0/24",
  "8.34.70.0/23",
  "8.34.200.0/23",
  "8.34.202.0/24",
  "8.35.57.0/24",
  "8.35.58.0/23",
  "8.35.149.0/24",
  "8.35.211.0/24",
  "8.36.216.0/22",
  "8.36.220.0/24",
  "8.37.41.0/24",
  "8.37.43.0/24",
  "8.38.147.0/24",
  "8.38.148.0/23",
  "8.38.172.0/24",
  "8.39.6.0/24",
  "8.39.18.0/24",
  "8.39.125.0/24",
  "8.39.126.0/24",
  "8.39.201.0/24",
  "8.39.202.0/23",
  "8.39.204.0/22",
  "8.39.212.0/22",
  "8.40.26.0/23",
  "8.40.28.0/22",
  "8.40.107.0/24",
  "8.40.111.0/24",
  "8.40.140.0/24",
  "8.41.5.0/24",
  "8.41.6.0/23",
  "8.41.36.0/23",
  "8.42.51.0/24",
  "8.42.52.0/24",
  "8.42.54.0/23",
  "8.42.161.0/24",
  "8.42.164.0/24",
  "8.42.172.0/24",
  "8.42.245.0/24",
  "8.43.121.0/24",
  "8.43.122.0/23",
  "8.43.224.0/23",
  "8.43.226.0/24",
  "8.44.0.0/22",
  "8.44.6.0/24",
  "8.44.58.0/24",
  "8.44.60.0/22",
  "8.45.41.0/24",
  "8.45.43.0/24",
  "8.45.44.0/22",
  "8.45.97.0/24",
  "8.45.101.0/24",
  "8.45.102.0/24",
  "8.45.108.0/24",
  "8.45.111.0/24",
  "8.45.144.0/22",
  "8.46.113.0/24",
  "8.46.114.0/23",
  "8.46.117.0/24",
  "8.46.118.0/23",
  "8.47.9.0/24",
  "8.47.12.0/22",
  "8.47.69.0/24",
  "8.47.71.0/24",
  "8.48.130.0/24",
  "8.48.132.0/23",
  "8.48.134.0/24",
  "23.227.37.0/24",
  "23.227.38.0/23",
  "23.227.60.0/24",
  "64.68.192.0/24",
  "65.110.63.0/24",
  "66.235.200.0/24",
  "68.67.65.0/24",
  "91.234.214.0/24",
  "103.21.244.0/24",
  "103.22.200.0/22",
  "103.81.228.0/24",
  "104.16.0.0/12",
  "108.162.192.0/20",
  "108.162.210.0/23",
  "108.162.212.0/23",
  "108.162.216.0/23",
  "108.162.218.0/24",
  "108.162.226.0/23",
  "108.162.235.0/24",
  "108.162.236.0/22",
  "108.162.240.0/21",
  "108.162.248.0/23",
  "108.162.250.0/24",
  "108.162.252.0/23",
  "141.101.65.0/24",
  "141.101.66.0/23",
  "141.101.68.0/22",
  "141.101.72.0/22",
  "141.101.76.0/23",
  "141.101.82.0/23",
  "141.101.84.0/22",
  "141.101.90.0/24",
  "141.101.92.0/22",
  "141.101.96.0/22",
  "141.101.100.0/24",
  "141.101.108.0/23",
  "141.101.110.0/24",
  "141.101.112.0/20",
  "162.158.0.0/22",
  "162.158.4.0/23",
  "162.158.8.0/21",
  "162.158.16.0/20",
  "162.158.32.0/20",
  "162.158.48.0/24",
  "162.158.51.0/24",
  "162.158.52.0/22",
  "162.158.56.0/21",
  "162.158.72.0/21",
  "162.158.80.0/23",
  "162.158.82.0/24",
  "162.158.84.0/22",
  "162.158.88.0/21",
  "162.158.96.0/20",
  "162.158.112.0/23",
  "162.158.114.0/24",
  "162.158.116.0/22",
  "162.158.124.0/22",
  "162.158.128.0/19",
  "162.158.160.0/20",
  "162.158.176.0/24",
  "162.158.178.0/23",
  "162.158.180.0/22",
  "162.158.184.0/21",
  "162.158.192.0/22",
  "162.158.196.0/24",
  "162.158.198.0/23",
  "162.158.200.0/21",
  "162.158.208.0/22",
  "162.158.212.0/24",
  "162.158.214.0/23",
  "162.158.216.0/21",
  "162.158.224.0/22",
  "162.158.228.0/24",
  "162.158.232.0/21",
  "162.158.240.0/22",
  "162.158.244.0/23",
  "162.158.248.0/22",
  "162.158.253.0/24",
  "162.158.254.0/23",
  "162.159.0.0/18",
  "162.159.64.0/20",
  "162.159.128.0/17",
  "162.251.82.0/24",
  "172.64.0.0/15",
  "172.66.0.0/22",
  "172.66.40.0/21",
  "172.67.0.0/16",
  "172.68.0.0/19",
  "172.68.32.0/21",
  "172.68.40.0/22",
  "172.68.45.0/24",
  "172.68.46.0/23",
  "172.68.48.0/20",
  "172.68.64.0/20",
  "172.68.80.0/23",
  "172.68.83.0/24",
  "172.68.84.0/22",
  "172.68.88.0/21",
  "172.68.96.0/20",
  "172.68.112.0/21",
  "172.68.120.0/23",
  "172.68.123.0/24",
  "172.68.124.0/22",
  "172.68.128.0/20",
  "172.68.144.0/21",
  "172.68.152.0/22",
  "172.68.161.0/24",
  "172.68.162.0/23",
  "172.68.164.0/22",
  "172.68.168.0/21",
  "172.68.176.0/23",
  "172.68.179.0/24",
  "172.68.180.0/22",
  "172.68.184.0/21",
  "172.68.196.0/22",
  "172.68.200.0/21",
  "172.68.208.0/21",
  "172.68.217.0/24",
  "172.68.218.0/23",
  "172.68.220.0/22",
  "172.68.224.0/20",
  "172.68.240.0/21",
  "172.68.248.0/22",
  "172.68.252.0/23",
  "172.68.255.0/24",
  "172.69.0.0/20",
  "172.69.16.0/24",
  "172.69.18.0/23",
  "172.69.20.0/22",
  "172.69.32.0/20",
  "172.69.48.0/24",
  "172.69.52.0/22",
  "172.69.60.0/22",
  "172.69.64.0/19",
  "172.69.96.0/23",
  "172.69.100.0/22",
  "172.69.105.0/24",
  "172.69.106.0/23",
  "172.69.108.0/22",
  "172.69.112.0/21",
  "172.69.124.0/22",
  "172.69.128.0/20",
  "172.69.144.0/21",
  "172.69.156.0/22",
  "172.69.160.0/20",
  "172.69.180.0/22",
  "172.69.184.0/21",
  "172.69.192.0/20",
  "172.69.208.0/24",
  "172.69.210.0/23",
  "172.69.212.0/24",
  "172.69.216.0/22",
  "172.69.220.0/23",
  "172.69.224.0/20",
  "172.69.241.0/24",
  "172.69.242.0/24",
  "172.69.244.0/22",
  "172.69.248.0/24",
  "172.69.250.0/23",
  "172.69.252.0/22",
  "172.70.32.0/20",
  "172.70.48.0/23",
  "172.70.51.0/24",
  "172.70.52.0/22",
  "172.70.56.0/21",
  "172.70.80.0/20",
  "172.70.96.0/20",
  "172.70.112.0/22",
  "172.70.116.0/23",
  "172.70.120.0/21",
  "172.70.128.0/21",
  "172.70.136.0/24",
  "172.70.138.0/23",
  "172.70.140.0/22",
  "172.70.144.0/22",
  "172.70.148.0/23",
  "172.70.150.0/24",
  "172.70.152.0/22",
  "172.70.156.0/23",
  "172.70.158.0/24",
  "172.70.160.0/22",
  "172.70.172.0/22",
  "172.70.176.0/21",
  "172.70.186.0/23",
  "172.70.188.0/22",
  "172.70.192.0/21",
  "172.70.200.0/24",
  "172.70.202.0/23",
  "172.70.204.0/22",
  "172.70.208.0/20",
  "172.70.224.0/19",
  "172.71.0.0/24",
  "172.71.2.0/23",
  "172.71.4.0/22",
  "172.71.8.0/21",
  "172.71.16.0/23",
  "172.71.20.0/22",
  "172.71.24.0/21",
  "172.71.80.0/21",
  "172.71.88.0/23",
  "172.71.90.0/24",
  "172.71.92.0/22",
  "172.71.96.0/21",
  "172.71.108.0/22",
  "172.71.112.0/20",
  "172.71.128.0/21",
  "172.71.137.0/24",
  "172.71.138.0/23",
  "172.71.140.0/22",
  "172.71.144.0/20",
  "172.71.160.0/19",
  "172.71.192.0/18",
  "173.245.49.0/24",
  "173.245.54.0/24",
  "173.245.58.0/23",
  "173.245.63.0/24",
  "185.146.172.0/23",
  "188.114.96.0/22",
  "188.114.100.0/24",
  "188.114.102.0/23",
  "188.114.106.0/23",
  "188.114.108.0/24",
  "188.114.111.0/24",
  "190.93.240.0/20",
  "195.242.122.0/23",
  "197.234.240.0/22",
  "198.41.129.0/24",
  "198.41.192.0/20",
  "198.41.208.0/23",
  "198.41.211.0/24",
  "198.41.212.0/24",
  "198.41.214.0/23",
  "198.41.216.0/21",
  "198.41.224.0/21",
  "198.41.232.0/23",
  "198.41.236.0/22",
  "198.41.240.0/23",
  "198.41.242.0/24",
  "198.217.251.0/24",
  "199.27.128.0/22",
  "199.27.132.0/24",
  "199.27.134.0/23"
];
const cfcidrIPv6 = [
  "2400:cb00:445::/48",
  "2400:cb00:497::/48",
  "2400:cb00:618::/48",
  "2400:cb00:2048::/47",
  "2400:cb00:bbd0::/44",
  "2400:cb00:f00e::/48",
  "2606:4700::/43",
  "2606:4700:20::/44",
  "2606:4700:50::/45",
  "2606:4700:58::/46",
  "2606:4700:5c::/47",
  "2606:4700:61::/48",
  "2606:4700:62::/47",
  "2606:4700:64::/46",
  "2606:4700:6a::/47",
  "2606:4700:6c::/46",
  "2606:4700:a0::/47",
  "2606:4700:a9::/48",
  "2606:4700:c0::/44",
  "2606:4700:d0::/47",
  "2606:4700:e0::/45",
  "2606:4700:f0::/47",
  "2606:4700:f3::/48",
  "2606:4700:f4::/48",
  "2606:4700:100::/47",
  "2606:4700:10f::/48",
  "2606:4700:130::/44",
  "2606:4700:3000::/42",
  "2606:4700:3055::/48",
  "2606:4700:3056::/48",
  "2606:4700:3108::/48",
  "2606:4700:310c::/48",
  "2606:4700:3110::/44",
  "2606:4700:4400::/44",
  "2606:4700:4700::/48",
  "2606:4700:8390::/44",
  "2606:4700:83b0::/44",
  "2606:4700:85c0::/43",
  "2606:4700:8ca0::/44",
  "2606:4700:8d70::/44",
  "2606:4700:8d90::/44",
  "2606:4700:8dd0::/44",
  "2606:4700:8de0::/44",
  "2606:4700:90c0::/43",
  "2606:4700:91b0::/44",
  "2606:4700:9640::/44",
  "2606:4700:9760::/44",
  "2606:4700:99e0::/44",
  "2606:4700:9a60::/44",
  "2606:4700:9a90::/44",
  "2606:4700:9ad0::/44",
  "2606:4700:9ae0::/44",
  "2606:4700:9b00::/44",
  "2606:4700:9c50::/44",
  "2606:4700:9c60::/44",
  "2803:f800:50::/46",
  "2803:f800:54::/48",
  "2a06:98c1:50::/46",
  "2a06:98c1:56::/48",
  "2a06:98c1:58::/48",
  "2a06:98c1:3100::/44",
  "2a06:98c1:3120::/46"
]; */